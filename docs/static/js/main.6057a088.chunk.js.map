{"version":3,"sources":["Components/AddCategories.jsx","Helpers/getGifs.js","Components/GifGridItem.jsx","Components/GifGrid.jsx","Hooks/useFetchGifs.js","GifApp.jsx","index.js"],"names":["AddCategories","_ref","setCategories","_useState","useState","_useState2","Object","slicedToArray","inputValue","setInputValue","react_default","a","createElement","onSubmit","e","preventDefault","trim","length","cats","concat","toConsumableArray","type","value","onChange","target","getGifs","asyncToGenerator","regenerator_default","mark","_callee","category","url","resp","_yield$resp$json","data","gifs","wrap","_context","prev","next","encodeURI","fetch","sent","json","map","img","id","title","images","original","abrupt","stop","_x","apply","this","arguments","GifGridItem","className","src","alt","GifGrid","_useFetchGifs","loading","state","setState","useEffect","then","imgs","useFetchGifs","Fragment","Components_GifGridItem","assign","key","GifApp","props","categories","Components_AddCategories","Components_GifGrid","ReactDOM","render","src_GifApp","document","getElementById"],"mappings":"+KA8BeA,EA3BO,SAAAC,GAAqB,IAAnBC,EAAmBD,EAAnBC,cAAmBC,EACLC,mBAAS,IADJC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClCK,EADkCH,EAAA,GACtBI,EADsBJ,EAAA,GAYzC,OACEK,EAAAC,EAAAC,cAAA,QAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEP,EAAWQ,OAAOC,OAAO,IAC3Bf,EAAc,SAAAgB,GAAI,OAAGV,GAAHW,OAAAb,OAAAc,EAAA,EAAAd,CAAiBY,MACnCT,EAAc,OAKdC,EAAAC,EAAAC,cAAA,SACES,KAAK,OACLC,MAAOd,EACPe,SAfkB,SAACT,GACvBL,EAAcK,EAAEU,OAAOF,mCCLdG,EAAO,eAAAxB,EAAAK,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAhB,EAAAiB,KAAC,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAhB,EAAAyB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACbR,EADa,0CAAAZ,OACiCqB,UAAUV,GAD3C,sDAAAO,EAAAE,KAAA,EAEFE,MAAMV,GAFJ,cAEbC,EAFaK,EAAAK,KAAAL,EAAAE,KAAA,EAGAP,EAAKW,OAHL,cAAAV,EAAAI,EAAAK,KAGZR,EAHYD,EAGZC,KAEDC,EAAKD,EAAKU,IAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXhB,IAAKc,EAAIG,OAAOC,SAASlB,OATZM,EAAAa,OAAA,SAaZf,GAbY,yBAAAE,EAAAc,SAAAtB,MAAD,gBAAAuB,GAAA,OAAAnD,EAAAoD,MAAAC,KAAAC,YAAA,GCeLC,EAbK,SAAAvD,GAAoBA,EAAlB6C,GAAkB,IAAfC,EAAe9C,EAAf8C,MAAMhB,EAAS9B,EAAT8B,IAC7B,OACErB,EAAAC,EAAAC,cAAA,OAAK6C,UAAU,0CACb/C,EAAAC,EAAAC,cAAA,OAAK8C,IAAK3B,EAAK4B,IAAKZ,IACpBrC,EAAAC,EAAAC,cAAA,SAAImC,KCwBKa,EAzBC,SAAA3D,GAAgB,IAAd6B,EAAc7B,EAAd6B,SAAc+B,ECHN,SAAC/B,GAAW,IAAA3B,EACVC,mBAAS,CACjC8B,KAAM,GACN4B,SAAS,IAHyBzD,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC7B4D,EAD6B1D,EAAA,GACtB2D,EADsB3D,EAAA,GAgBpC,OAVA4D,oBAAU,WACRxC,EAAQK,GACLoC,KAAK,SAAAC,GACJH,EAAS,CACP9B,KAAKiC,EACLL,SAAS,OAGf,CAAChC,IAEIiC,EDXqBK,CAAatC,GAA7BkB,EAFkBa,EAEvB3B,KAAY4B,EAFWD,EAEXC,QAEnB,OACEpD,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0D,SAAA,KACE3D,EAAAC,EAAAC,cAAA,MAAI6C,UAAU,qCAAqC3B,GAClDgC,GAAUpD,EAAAC,EAAAC,cAAA,wBACXF,EAAAC,EAAAC,cAAA,OAAK6C,UAAU,aACVT,EAAOJ,IAAI,SAACC,GACX,OACAnC,EAAAC,EAAAC,cAAC0D,EAADhE,OAAAiE,OAAA,CACEC,IAAK3B,EAAIC,IACLD,SEYH4B,EA1BA,SAAAC,GAAS,IAAAvE,EACcC,mBAAS,CAAC,gBADxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACfwE,EADetE,EAAA,GACHH,EADGG,EAAA,GAKtB,OACEK,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0D,SAAA,KACE3D,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACgE,EAAD,CAAe1E,cAAeA,IAC9BQ,EAAAC,EAAAC,cAAA,WACG+D,EAAW/B,IAAI,SAAAd,GACd,OACEpB,EAAAC,EAAAC,cAACiE,EAAD,CACEL,IAAK1C,EACLA,SAAUA,QCdxBgD,IAASC,OACPrE,EAAAC,EAAAC,cAACoE,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.6057a088.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategories = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('')\r\n  const handleInputChange=(e)=>{\r\n    setInputValue(e.target.value)\r\n  }\r\n  const handleSubmit=(e)=>{\r\n    e.preventDefault()\r\n    if (inputValue.trim().length>2) {\r\n      setCategories(cats=>[inputValue,...cats])\r\n      setInputValue('')\r\n    }\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategories.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategories\r\n","\r\nexport const getGifs=async(category)=>{\r\n  const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Hrsya1YKTOAtcFTxwb1Fuf58WIA9uTvo`\r\n  const resp=await fetch(url)\r\n  const {data}=await resp.json()\r\n\r\n  const gifs=data.map(img=>{\r\n    return({\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.original.url\r\n      })\r\n  })\r\n\r\n  return gifs;\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ({id,title,url}) => {\r\n  return (\r\n    <div className='card animate__animated animate__fadeIn'>\r\n      <img src={url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGridItem\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n  \r\n  const {data:images,loading}=useFetchGifs(category)\r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n      {loading&& <p>Loading ...</p>}\r\n      <div className='card-grid'>\r\n          {images.map((img)=>{\r\n            return(\r\n            <GifGridItem\r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          )})}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState,useEffect } from \"react\"\r\nimport { getGifs } from \"../Helpers/getGifs\"\r\n\r\nexport const useFetchGifs=(category)=>{\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect(()=>{\r\n    getGifs(category)\r\n      .then(imgs=>{\r\n        setState({\r\n          data:imgs,\r\n          loading: false\r\n        })\r\n      })\r\n  },[category])\r\n\r\n  return state;\r\n}","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AddCategories from './Components/AddCategories'\r\nimport GifGrid from './Components/GifGrid'\r\n\r\nconst GifApp = props => {\r\n  const [categories, setCategories] = useState(['Dragon Ball'])\r\n  // const handleAdd=()=>{\r\n  //   setCategories([...categories,'Death Note'])\r\n  // }\r\n  return (\r\n    <>\r\n      <h2>GifApp</h2>\r\n      <AddCategories setCategories={setCategories}/>\r\n      <hr/>\r\n        {categories.map(category=>{\r\n          return(\r\n            <GifGrid\r\n              key={category}\r\n              category={category}\r\n            />\r\n          )\r\n        })}\r\n    </>\r\n  )\r\n}\r\n\r\nGifApp.propTypes = {\r\n\r\n}\r\n\r\nexport default GifApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifApp from './GifApp'\n\nReactDOM.render(\n  <GifApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}